// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should not set amount if invalid input 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should render ExpenseForm correctly 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should render ExpenseForm correctly with expense data 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value="Groceries"
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value="100"
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1969-12-28T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Update Expense
    </button>
  </div>
</form>
`;

exports[`should render error message on invalid form submit 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should render error message on invalid form submit 2`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <ErrorPopup />
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should set amount if valid input 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value="49.99"
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should set description on input change 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value="New description"
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value=""
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;

exports[`should set note on text area change 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <label>
    Expense Description
  </label>
  <input
    autoFocus={true}
    className="text-input"
    id="desc"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <label>
    Expense Amount (
    <span>
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              288,
              512,
              Array [],
              "f155",
              "M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z",
            ],
            "iconName": "dollar-sign",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    </span>
    )
  </label>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <label>
    Expense Date
  </label>
  <withStyles(SingleDatePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    small={false}
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
  <label>
    Expense Note
  </label>
  <textarea
    className="textarea"
    cols="30"
    onChange={[Function]}
    placeholder="Add a note for your Expense! (optional)"
    rows="10"
    value="New Note"
  />
  <div>
    <button
      className="button"
    >
      Add Expense
    </button>
  </div>
</form>
`;
